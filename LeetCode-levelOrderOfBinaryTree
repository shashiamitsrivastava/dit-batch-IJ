class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> levels = new ArrayList<>(); // biglist
        if(root == null){
            return levels;
        }
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root); 
        int level = 0;
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> smallList = new ArrayList<>(); // small list will add in biglist
            for(int i = 0; i<size; i++){
                TreeNode node = queue.poll();
                smallList.add(node.val);
                if(node.left!=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
            }
            levels.add(level, smallList);
            level++;

        }
        return levels;
    }
}
