class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> bigList = new ArrayList<>();
        if(root == null){
            return bigList;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int level = 0;
        while(!queue.isEmpty()){
            int size= queue.size();
            List<Integer> smallList = new ArrayList<>();
            for(int i = 0; i<size; i++){
                TreeNode node = queue.poll();
                smallList.add(node.val);
                if(node.left!=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
            }
            if(level % 2!=0){
                // check level is odd, reverse it
                Collections.reverse(smallList);
            }
            bigList.add(smallList);
            level++;
        }
        return bigList;

    }
}
