/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null){
            return null;
        }
        if(head.next == null){
            return head;
        }
        ListNode temp = head;
        int len = 1;
        // Compute the Length of a LinkedList
        while(temp.next!=null){
            temp = temp.next;
            len++;
        }
        // Make Circular
        temp.next = head;
        // Find the New Tail Node
        ListNode newTail = head;
        for(int i = 0; i<len-(k%len)-1; i++){
            newTail = newTail.next;
        }
        // Find the New Head
        ListNode newHead = newTail.next;
        newTail.next = null; // break the circle
        return newHead;
    }
}
