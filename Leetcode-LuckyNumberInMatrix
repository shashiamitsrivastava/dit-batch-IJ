class Solution {
    public List<Integer> luckyNumbers (int[][] matrix) {
        // Maintain the list of Minimum in rows
        List<Integer> minRow = new ArrayList<>();
        // Maintain the List of Maximum in Cols
        List<Integer> maxCol = new ArrayList<>();
        int minRowElement = Integer.MAX_VALUE;
        int maxColElement = Integer.MIN_VALUE;
        // Collect the Min Row Values
        for(int rows[] : matrix){
            for(int val: rows){
                minRowElement = Math.min(minRowElement, val);
            }
            minRow.add(minRowElement);
            minRowElement = Integer.MAX_VALUE; // Reset
        }
        // Collect the Max Col Values
        for(int col = 0; col<matrix[0].length; col++){
            for(int row = 0; row<matrix.length; row++){
                maxColElement = Math.max(maxColElement, matrix[row][col]);
            }
            maxCol.add(maxColElement);
            maxColElement = Integer.MIN_VALUE; // Reset
        }
        // Compare Which Element is the Lucky Number (Min Row and Max Col)
        // List for Storing the Answer
        List<Integer> ans = new ArrayList<>();
        for(int val : minRow){
            if(maxCol.contains(val)){
                ans.add(val);
            }
        }
        return ans;
    }
}
